score = 0
kf = StratifiedKFold(n_splits = 5, shuffle = True, random_state=2020)
evals_results = {}
for train_index, test_index in kf.split(x, y):
    x_train, x_test = x.loc[train_index], x.loc[test_index]
    y_train, y_test = y.loc[train_index], y.loc[test_index]
    
    lgtrain = lgb.Dataset(x_train, y_train)
    lgval = lgb.Dataset(x_test, y_test)
    
    model = lgb.train({'metric':[lgb_f1_score], 'objective': 'binary'},
                     train_set=lgtrain, 
                     valid_sets= [lgval], 
                     valid_names=['valid'], 
                     evals_result=evals_results, 
                     num_boost_round=5000,
                     early_stopping_rounds=100,
                     verbose_eval=-1, 
                     feval=lgb_f1_score
                     )
    y_pred = model.predict(x_test)
    scorep = f1_score(np.where(y_pred < 0.5, 0, 1)  , y_test)
    score += scorep
print("lightgbm mean f1_score:", score/5)